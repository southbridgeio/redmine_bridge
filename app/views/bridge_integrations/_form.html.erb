<% if @bridge_integration.errors.any? %>
  <% @bridge_integration.errors.full_messages.each do |message| %>
    <h3><%= message %> </h3>
  <% end %>
  </br>
<% end %>

<%= form_with(model: @bridge_integration, url: url, method: method) do |form| %>
  <div class="box tabular settings">
    <p>
      <%= form.label t('redmine_bridge.integration.name') %>
      <%= form.text_field 'name' %>
    </p>


    <p>
      <%= form.label t('redmine_bridge.integration.key') %>
      <%= form.text_field 'key' %>
    </p>

    <p>
      <%= form.label t('redmine_bridge.integration.connector') %>
      <%= form.select 'connector_id', RedmineBridge::Registry.keys, {}, id: "connector_id", 'data-initial-value': @bridge_integration.connector_id || RedmineBridge::Registry.keys.first %>
    </p>

    <p>
      <%= form.label t('redmine_bridge.integration.project') %>
      <%= form.select 'project_id', Project.order(:name).pluck(:name, :id), {}, id: 'project_id_select' %>
    </p>

    <p>
      <%= form.label t('redmine_bridge.integration.default_project'), title: t('redmine_bridge.integration.default_project_title') %>
      <%= form.select 'default_project_id', Project.order(:name).pluck(:name, :id), { include_blank: true }, { id: 'default_project_id_select' } %>
    </p>

    <br>

    <p><%= form.label t('redmine_bridge.integration.status_settings') + ':' %></p>

    <% IssueStatus.all.each do |status| %>
      <p>
        <%= form.label status.name %>
        <%= form.text_field "settings[statuses][#{status.id}]", value: @bridge_integration.settings.dig('statuses', status.id.to_s) %>
      </p>
    <% end %>

    <br>

    <p><%= form.label t('redmine_bridge.integration.priority_settings') + ':' %></p>

    <% Enumeration.where(type: 'IssuePriority').each do |enum| %>
      <p>
        <%= form.label enum.name %>
        <%= form.text_field "settings[priorities][#{enum.id}]", value: @bridge_integration.settings.dig('priorities', enum.id.to_s) %>
      </p>
    <% end %>

    <% RedmineBridge::Registry.keys.each do |key| %>
      <div id="<%= key %>_form" class="<%= key.to_s == @bridge_integration.connector_id ? nil : 'hidden' %>">
        <%= render partial: "bridge_integrations/#{key}", locals: { form: form } rescue nil %>
      </div>
    <% end %>
  </div>

  <p>
    <%= form.submit t(@bridge_integration.new_record? ? 'button_create' : 'button_update') %>
  </p>
<% end %>

<script>
  var connector = document.getElementById('connector_id');

  function toggleForm() {
    $(`#${connector.dataset.initialValue}_form`).addClass('hidden');
    $(`#${connector.value}_form`).removeClass('hidden');
    connector.dataset.initialValue = connector.value
  }

  connector.addEventListener('change', (event) => {
    toggleForm()
  })

  $(document).ready(function () {
    $('#project_id_select').select2()
    toggleForm()
  })

  $(document).ready(function () {
      $('#default_project_id_select').select2()
      toggleForm()
  })
</script>
